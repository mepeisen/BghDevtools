<?php
declare(ENCODING = 'utf-8');
namespace F3\{packageKey}<f:if condition="{isInSubpackage}">\{subpackage}</f:if>\Domain<f:if condition="{isInNamespace}">\{namespace}</f:if>\Repository;
{namespace bgh=F3\BghModelTools\ViewHelpers}
// {generatedInfo}

/*                                                                        *
<f:format.padding padLength="74"> * This script belongs to the FLOW3 package "{packageKey}".</f:format.padding>*
 *                                                                        *
 * It is free software; you can redistribute it and/or modify it under    *
 * the terms of the GNU Lesser General Public License as published by the *
 * Free Software Foundation, either version 3 of the License, or (at your *
 * option) any later version.                                             *
 *                                                                        *
 * This script is distributed in the hope that it will be useful, but     *
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHAN-    *
 * TABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser       *
 * General Public License for more details.                               *
 *                                                                        *
 * You should have received a copy of the GNU Lesser General Public       *
 * License along with the script.                                         *
 * If not, see http://www.gnu.org/licenses/lgpl.html                      *
 *                                                                        *
 * The TYPO3 project - inspiring people to share!                         *
 *                                                                        */

<bgh:section name="preclass">
</bgh:section>

/**
 * {repositoryName} class for the {packageKey} package <f:if condition="{isInSubpackage}"> and subpackage {subpackage}</f:if>
 *
 * {repositoryDocumentation}
 *
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License, version 3 or later
 */
class {repositoryClassName} extends \F3\BghObjects\Lib\Repository\SimpleEntityRepository implements \F3\{packageKey}<f:if condition="{isInSubpackage}">\{subpackage}</f:if>\Domain<f:if condition="{isInNamespace}">\{namespace}</f:if>\Repository\{repositoryClassName}Interface
{

    <bgh:section name="inclass">
    </bgh:section>
    
    /**
     * @var string
     */
    protected $objectType = '<bgh:normalizeType type="{objectType}" />';
    
    <f:for each="{repositoryMethods}" as="method">
    /**
     * {method.documentation}<f:for each="{method.visibleArgs}" as="arg" key="key"><f:if condition="{key} == 0">
     * </f:if>
     * @param <bgh:normalizeType type="{arg.type}" /> ${arg.name} {arg.documentation}</f:for>
     * 
     * @return <bgh:normalizeType type="{method.return.type}" /> {method.return.documentation}<f:for each="{method.throws}" as="throw" key="key="><f:if condition="{key} == 0">
     * </f:if>
     * @throws <bgh:normalizeTypeEx type="{throw.type}" thisPackage="Domain" /> {throw.documentation}</f:for>
     */
    public function {method.name}(<f:for each="{method.visibleArgs}" as="arg" key="key"><f:if condition="{key} > 0">, </f:if><bgh:normalizeTypeArg type="{arg.type}" /> ${arg.name}</f:for>)
    {<f:for each="{method.args}" as="arg"><f:if condition="{arg.shadowed}">
        ${arg.name} = {arg.value};</f:if></f:for><f:if condition="{method.usercode}"><f:then>
        <bgh:section name="method-{method.name}">
        // TODO auto generated code
        return null;
        </bgh:section></f:then><f:else><f:if condition="method.find"><f:then>
        $query = $this->createQuery();
        $and = $query->logicalAnd(array(<f:for each="{method.args}" as="arg" key="key"><f:if condition="{key} > 0">,</f:if>
            $query->equals('{arg.name}', ${arg.name})</f:for>
            ));
        $result = $query->matching($and)->execute();
        return current($result);</f:then><f:else><f:if condition="{method.findAll}"><f:then>
        $query = $this->createQuery();
        $and = $query->logicalAnd(array(<f:for each="{method.args}" as="arg" key="key"><f:if condition="{key} > 0">,</f:if>
            $query->equals('{arg.name}', ${arg.name})</f:for>
            ));
        return $query->matching($and)->execute();</f:then><f:else>
        NOT SUPPORTED!</f:else></f:if></f:else></f:if></f:else></f:if>
    }</f:for>
    
}

<bgh:section name="postclass">
</bgh:section>
